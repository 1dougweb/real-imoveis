---
description: 
globs: 
alwaysApply: false
---
Rules for Backend with Laravel
-Use Laravel 10+ with PHP 8.2+
-Follow MVC architecture with modular structure (e.g., Modules/User, Modules/Order)
-All API routes must be versioned (e.g., /api/v1/...)
-Use Route::prefix('v1')->group(...) with versioned controllers
-Use Form Requests for input validation
-Use Sanctum or Passport for authentication
-All routes must require authentication, except explicitly defined public routes
-Protect against CSRF, XSS, and SQL Injection
-Use Eloquent ORM for standard database interactions
-Use Query Builder only when needed for performance
-Use DTOs for transferring data between layers
-Implement support for Stripe and Mercado Pago
-Create separate services in app/Services/Payments (e.g., StripeService, MercadoPagoService)
-Log and store the status of all transactions
-Use events and listeners for actions like PaymentProcessed or UserRegistered
-Send long-running processes to the queue using Jobs
-Cace high-read endpoints using Cache::remember
-Use Redis as the cache driver
-Add indexing to database columns used in search or filters
-Create custom exceptions for expected failures (e.g., InvalidPaymentException)
-Use specific logging channels for project areas (e.g., payment, auth)

-Write tests using PHPUnit for units, jobs, and controller